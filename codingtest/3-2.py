# 배열의 크기 N, 숫자가 더해지는 횟수 M, 그리고 K가 주어질 때 
# 동빈이의 큰 수의 법칙에 따른 결과를 출력하시오.

# 동빈이의 큰 수의 법칙
#     다양한 수로 이루어진 배열이 있을 때 주어진 수들을 M번 더하여 가장 큰 수를 만든다.
#     이때, 특정 배열의 특정 인덱스에 해당하는 수가 연속해서 K번을 초과하여 더해질 수 없는 것이 이 법칙의 특징이다.

# 입력 조건
#     첫째 줄에 N(2<= N, 1000), M(1<=M<=10000), K(1<=K<=10000)의 자연수가 주어지며, 각 자연수는 공백으로 구분한다.
#     둘째 줄에 N개의 자연수가 주어진다. 각 자연수는 공백으로 구분한다. 단, 각각의 자연수는 1 이상 10000이하의 수로 주어진다.
#     입력으로 주어지는 K는 항상 M보다 작거나 같다.

# 출력 조건
#     첫째 줄에 동빈이의 큰 수의 법칙에 따라 더해진 답을 출력한다.

# 입력 예시
#     5 8 3
#     2 4 5 4 6
# 출력 예시
#     46


############################################################################

#그리디 알고리즘을 사용
#max값 중복한계도달시 두번째 max값을 사용해 중복을 회피한다.


# n = 배열의 크기, m = 숫자덧셈 횟수, k = 중복
n, m, k = map(int, input().split())

# 배열 입력받기
arr = list(map(int, input().split()))

# 큰 수와 두번째 큰 수 구하기
uniq = sorted(set(arr), reverse=True)
num1max = uniq[0]
num2max = uniq[1]


#게산과정
count = 1 
sum = 0



for i in range(0,m):
    if (m % k == k-1):
        sum += num1max
    else:
        sum += num2max       


print(sum)








