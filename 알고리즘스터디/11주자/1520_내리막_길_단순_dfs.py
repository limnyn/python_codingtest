# https://www.acmicpc.net/problem/1520

'''
'항상 자기 자신보다 작은 크기로 이동'

50 45 37 32 30
35 50 40 20 25
30 30 25 17 28
27 24 22 15 10 그리드에 대해서

4방향 dfs 탐색을 하면서 방문했던 적 없으면 탐색한 것을 표시하고
만약 방문한 적이 없으면 (-1) 방문처리
방문한 적이 있으면 해당 pd + 1 

시간초과



'''
import sys
input = sys.stdin.readline
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
dp = [[-1] * (m) for _ in range(n)]
dp[0][0] = 1

dr = [-1, 0, 1, 0]
dc = [0, 1, 0, -1]


def dfs(r, c):
    
    if r == n-1 and c == m-1:
        return dp[r][c]

    for i in range(4):
        nr = r + dr[i]
        nc = c + dc[i]        
        
        if 0 <= nr < n and 0 <= nc < m:
            if grid[r][c] > grid[nr][nc]:
                if dp[nr][nc] == -1:
                    dp[nr][nc] = dp[r][c]
                else:
                    dp[nr][nc] += 1
                dfs(nr, nc)
dfs(0,0)

result = dp[-1][-1]
if result == -1:
    print(0)
else:
    print(result)

'''
4 5
50 45 37 32 30
35 50 40 20 25
30 30 25 17 28
27 24 22 15 10
답 3

4 4
93 72 61 58
90 73 19 49
85 36 75 13
21 41 45 7
답 2

7 7
100 33 58 59 61 31 30
74 31 55 62 70 70 29
73 98 49 47 11 10 36
62 59 56 45 44 8 7
59 58 54 53 41 7 3
56 32 29 18 40 4 3
34 31 26 40 39 73 1
답 27

5 5
27 26 25 24 23
28 29 30 31 22
17 18 19 20 21
16 32 33 34 35
15 14 13 12 11
답 1

4 5
50 45 37 32 30
35 50 40 20 25
30 30 25 17 28
27 24 22 15 10
답 3

2 18
98 91 89 80 76 74 65 58 50 49 44 32 26 23 17 15 14 8
95 91 83 82 70 67 65 55 54 50 41 27 22 20 14 10 7 3
답 211

2 2
1 2
2 1
답 0

3 5
55 99 49 48 47
54 99 50 99 46
53 52 51 99 45

4 4
9 8 7 6
8 7 6 5
7 6 5 4
6 5 4 3
답 20
'''